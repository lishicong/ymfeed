<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sc.ymfeed.mybatis.dao.FeedCommentMapper">
	<resultMap id="BaseResultMap" type="com.sc.ymfeed.mybatis.dto.FeedComment">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="comment" jdbcType="VARCHAR" property="comment" />
		<result column="reply_count" jdbcType="INTEGER" property="replyCount" />
		<result column="like_count" jdbcType="INTEGER" property="likeCount" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="user_account_id" jdbcType="VARCHAR" property="userAccountId" />
		<result column="feed_info_id" jdbcType="VARCHAR" property="feedInfoId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		id, comment, reply_count, like_count, state, user_account_id,
		feed_info_id, create_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		select
		<include refid="Base_Column_List" />
		from feed_comment
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		delete from feed_comment
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.sc.ymfeed.mybatis.dto.FeedComment">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		insert into feed_comment (id, comment, reply_count,
		like_count, state, user_account_id,
		feed_info_id, create_time, update_time
		)
		values (#{id,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR},
		#{replyCount,jdbcType=INTEGER},
		#{likeCount,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{userAccountId,jdbcType=VARCHAR},
		#{feedInfoId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.sc.ymfeed.mybatis.dto.FeedComment">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		insert into feed_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="comment != null">
				comment,
			</if>
			<if test="replyCount != null">
				reply_count,
			</if>
			<if test="likeCount != null">
				like_count,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="userAccountId != null">
				user_account_id,
			</if>
			<if test="feedInfoId != null">
				feed_info_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="comment != null">
				#{comment,jdbcType=VARCHAR},
			</if>
			<if test="replyCount != null">
				#{replyCount,jdbcType=INTEGER},
			</if>
			<if test="likeCount != null">
				#{likeCount,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="userAccountId != null">
				#{userAccountId,jdbcType=VARCHAR},
			</if>
			<if test="feedInfoId != null">
				#{feedInfoId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.sc.ymfeed.mybatis.dto.FeedComment">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		update feed_comment
		<set>
			<if test="comment != null">
				comment = #{comment,jdbcType=VARCHAR},
			</if>
			<if test="replyCount != null">
				reply_count = #{replyCount,jdbcType=INTEGER},
			</if>
			<if test="likeCount != null">
				like_count = #{likeCount,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="userAccountId != null">
				user_account_id = #{userAccountId,jdbcType=VARCHAR},
			</if>
			<if test="feedInfoId != null">
				feed_info_id = #{feedInfoId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sc.ymfeed.mybatis.dto.FeedComment">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 14 
			23:56:43 CST 2017. -->
		update feed_comment
		set comment = #{comment,jdbcType=VARCHAR},
		reply_count = #{replyCount,jdbcType=INTEGER},
		like_count = #{likeCount,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		user_account_id = #{userAccountId,jdbcType=VARCHAR},
		feed_info_id = #{feedInfoId,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_time = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<cache eviction="LRU" type="com.sc.ymfeed.mybatis.redis.RedisCache" />
	<resultMap id="CommentAndUserResultMap" type="com.sc.ymfeed.mybatis.dto.FeedComment">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="comment" jdbcType="VARCHAR" property="comment" />
		<result column="like_count" jdbcType="INTEGER" property="likeCount" />
		<result column="state" jdbcType="INTEGER" property="state" />
		<result column="user_account_id" jdbcType="VARCHAR" property="userAccountId" />
		<result column="feed_info_id" jdbcType="VARCHAR" property="feedInfoId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />

		<association javaType="com.sc.ymfeed.mybatis.dto.UserAccount"
			property="userAccount">
			<id column="id" jdbcType="VARCHAR" property="id" />
			<result column="email" jdbcType="VARCHAR" property="email" />
			<result column="nickname" jdbcType="VARCHAR" property="nickname" />
		</association>
		<!-- &lt;collection property="commentReply" ofType="com.sc.ymfeed.mybatis.dto.CommentReply"&gt; 
			&lt;result column="reply" jdbcType="VARCHAR" property="reply" /&gt; &lt;result 
			column="c_nickname" jdbcType="VARCHAR" property="nickname" /&gt; &lt;result 
			column="c_create_time" jdbcType="TIMESTAMP" property="createTime" /&gt; &lt;/collection&gt; -->
	</resultMap>
	<select id="selectFeedCommentById" resultMap="CommentAndUserResultMap">
		<!-- 查询一条评论 -->
		select
		f.id, f.comment, f.like_count, f.user_account_id,
		f.feed_info_id, f.create_time, u.nickname
		from
		feed_comment f
		left join
		user_account u on
		f.user_account_id = u.id
		where f.id =
		#{commentId,jdbcType=VARCHAR}
	</select>
	<select id="selectFeedCommentCountById" resultMap="CommentAndUserResultMap">
		<!-- 查询一条Feed的评论数量 -->
		select
		count(*)
		from
		feed_comment f
		where f.feed_info_id =
		#{feedId,jdbcType=VARCHAR}
	</select>
	<select id="selectFeedCommentByLimit" resultMap="CommentAndUserResultMap">
		<!-- 分页查询Feed的评论 -->
		select
		f.id, f.comment, f.like_count, f.user_account_id,
		f.feed_info_id, f.create_time, u.nickname
		from
		feed_comment f
		left join
		user_account u on
		f.user_account_id = u.id
		where f.feed_info_id =
		#{feedId,jdbcType=VARCHAR}
		order
		by f.create_time desc
		limit
		#{start},
		#{offset}
	</select>
</mapper>